#!/usr/bin/env node
var NCMB = require("ncmb");
var fs = require('fs');
var expandHomeDir = require('expand-home-dir')
var program = require('commander');

program
  .version('0.0.1')
  .option('-a, --application_key [application_key]', 'Your application Key', '')
  .option('-c, --client_key [client_key]', 'Your client key', '')
  .option('-i, --init', 'Init', '')
  .option('-s, --script [Script file name]', 'Detect execution script file name', '')
  .option('-q, --query [Query String]', 'Query parameters', '')
  .option('-d, --data [Request body]', 'Request body', '')
  .option('-m, --method [type]', 'Detect http method. GET/POST/PUT/DELETE', /^(GET|POST|PUT|DELETE)$/, '')
  .parse(process.argv);

config_path = expandHomeDir("~/.ncmb.json");

if (program.init) {
  init();
} else {
  setup();
}

function init() {
  if (program.application_key === '' && program.client_key === '') {
  } else {
    var params = {
      application_key: program.application_key,
      client_key: program.client_key
    };
    fs.open(config_path, 'w+', function(err, fd) {
      if (err) {
        console.log("Error happend.", err);
        process.exit(1);
      }else{
        fs.write(fd, JSON.stringify(params), function(err) {
          if (err) {
            console.log("Error happend.", err);
            process.exit(1);
          } else {
            console.log("Config file saved successful.");
            process.exit(0);
          }
        });
      }
    });
  }
}

function setup() {
  if (program.method === '') {
    console.log('Method is required.');
    process.exit(1);
  }

  if (program.script === '') {
    console.log('Script is required.');
    process.exit(1);  
  }
  
  if (program.application_key === '' && program.client_key === '') {
    fs.access(config_path, fs.R_OK, function(err) {
      if (err) {
        console.log("Application key and client key are required.");
        process.exit(1);
      }
      fs.readFile(config_path, function(err, data) {
        if (err) {
          console.log("Config file has broken.");
          process.exit(1);
        }
        json = JSON.parse(data.toString());
        program.application_key = json.application_key;
        program.client_key      = json.client_key;
        main();
      });
    });  
  }else{
    main();
  }
}

function main() {
  var ncmb = new NCMB(program.application_key, program.client_key);
  var script = ncmb.Script;
  if (program.query) {
      script = script.query(JSON.parse(program.query));
  }
  if (program.data) {
      script = script.data(JSON.parse(program.data));
  }
  script.exec(program.method, program.script)
    .then(function(res){
      // 実行後処理
      console.log(res);
    })
    .catch(function(err){
      // エラー処理
      console.log(err)
    });
}
