#!/usr/bin/env node
var program = require('commander');
var common = require('../lib/common');
var path = require('path');
var fs = require('fs');
var parse = require('csv-parse');

program
  .version('0.0.1')
  .option('-o, --output [filename]', 'Output the converted file.', '')
  .option('-b, --boolean [true or false]', 'Convert boolean. "True" changes to true and "False" changes to false. Case is not sensitive.', false)
  .option('-d, --date [true or false]', 'Convert date. Convert similar date format string to date object like YYYY-mm-ddTHH:MM:SS+09:00', false)
  .option('--object [true or false]', 'Convert object. Value should be parseable for json.', false)
  .option('-l, --location [true or false]', 'Convert location. Similar location format string converts to location like 99.99999..,999.99999.. ', false)
  .parse(process.argv);

var filename = program.args[0];

results = [];
var parser = parse({ delimiter: ',', columns: true}, function(err, data){
  for (var i in data) {
    var line = data[i];
    for (var k in line) {
      value = line[k];
      if (program.boolean) {
        if (value.toUpperCase() == 'TRUE') {
          line[k] = true;
          continue;
        } else if (value.toUpperCase() == 'FALSE') {
          line[k] = false;
        }
      }
      if (program.location) {
        if (match = value.match(/^([0-9]{1,2}\.[0-9]+),([0-9]{1,3}\.[0-9]+)$/)) {
          line[k] = {"__type":"GeoPoint","longitude": parseFloat(match[2]),"latitude": parseFloat(match[1])}
          continue;
        }
      }
      if (program.date) {
        if (match = value.match(/^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\+[0-9]{2}:[0-9]{2}$/)) {
          d = new Date(value);
          line[k] = {"__type":"Date","iso": d.toISOString()}
          continue;
        }
      }
      if (program.object) {
        try {
          line[k] = JSON.parse(value);
          continue;
        }catch(e){
        }
      }
      line[k] = value;
    }
    results.push(line);
  }
  fs.writeFile(path.resolve(program.output), JSON.stringify({results: results}), function(err) {
    if (err) {
      console.log(err);
    }else{
      console.log("Converted successfull.")
    }
  })
});

fs.createReadStream(filename).pipe(parser);


